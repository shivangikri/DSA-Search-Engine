
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.

Chef loves to make dishes. Currently, he has NN ingredients (numbered 11 through NN) which he can use to cook various dishes.

To make a dish, Chef must use exactly KK ingredients in a correct order. Therefore, a dish is a sequence of KK distinct integers between 11 and NN. The tastiness of that dish is defined as the GCD of these integers (all the ingredients in that dish). Chef wants to choose a dish uniformly randomly and cook it.

You should answer QQ queries. KK is the same for all queries. In each query, you are given NN and you should find the expected value of the tastiness of Chef's dish or determine that Chef cannot cook any dish.

If Chef can cook at least one dish, it can be proven that this expected value is a fraction in the form P/DP/D, where PP and DD are coprime positive integers and DD is coprime with 109+7109+7. You should compute P⋅D−1P⋅D−1 modulo 109+7109+7, where D−1D−1 denotes the multiplicative inverse of DD modulo 109+7109+7.

Input

The first line of the input contains two space-separated integers QQ and KK.
Each of the next QQ lines contains a single integer NN describing a query.

Output

For each query, print a single line containing one integer ― P⋅D−1P⋅D−1 modulo 109+7109+7, or 00 if Chef cannot cook any dish.

Constraints

1≤Q,N≤2⋅1051≤Q,N≤2⋅105
2≤K≤1052≤K≤105

Subtasks

Subtask #1 (10 points):

K=2K=2 
1≤N≤1,0001≤N≤1,000

Subtask #2 (15 points): K=2K=2

Subtask #3 (75 points): original constraints

Sample Input 1

3 2
1
2
4

Sample Output 1

0
1
166666669

Explanation

In the first query, it is impossible to cook a dish with two ingredients if N=1N=1.

In the second query, Chef can cook two dishes: (1,2)(1,2) and (2,1)(2,1). The tastiness of each of these dishes is 11, so the expected value of tastiness is 11.


