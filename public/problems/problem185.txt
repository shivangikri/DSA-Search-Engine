
Read problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.

Note: For the problem KPERM, we have observed that PYPY3 performs better than Python3.

You are given integers NN, RR and KK. Consider all permutations of the integers 11 through NN with exactly RR inversions. Find the KK-th lexicographically smallest among these permutations.

Notes:

The number of inversions in a permutation P1,P2,…,PNP1,P2,…,PN is the number of pairs of integers (i,j)(i,j) such that 1≤i<j≤N1≤i<j≤N and Pi>PjPi>Pj.
A permutation A1,A2,…,ANA1,A2,…,AN is lexicographically smaller than a permutation B1,B2,…,BNB1,B2,…,BN if there is an index ii (1≤i≤N1≤i≤N) such that Ai<BiAi<Bi and for each valid j<ij<i, Aj=BjAj=Bj.

Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first and only line of each test case contains three space-separated integers NN, RR and KK.

Output

For each test case:

If the lexicographically KK-th smallest permutation with RR inversions does not exist, print a single line containing the integer −1−1.
Otherwise, print a single line containing NN space-separated integers ― the lexicographically KK-th smallest permutation with RR inversions.

Constraints

1≤T≤2,0001≤T≤2,000
1≤N≤5001≤N≤500
0≤R≤200,0000≤R≤200,000
1≤K≤10181≤K≤1018

Sample Input 1

1
3 1 2

Sample Output 1

2 1 3

Explanation

Example case 1: There are two permutations with 11 inversion: [1,3,2][1,3,2] and [2,1,3][2,1,3]. The first permutation is lexicographically smaller than the second permutation.


