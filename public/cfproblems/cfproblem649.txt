AquaMoon had nn strings of length mm each. nn is an odd number.When AquaMoon was gone, Cirno tried to pair these nn strings together. After making n−12n−12 pairs, she found out that there was exactly one string without the pair!In her rage, she disrupted each pair of strings. For each pair, she selected some positions (at least 11 and at most mm) and swapped the letters in the two strings of this pair at the selected positions.For example, if m=6m=6 and two strings "abcdef" and "xyzklm" are in one pair and Cirno selected positions 22, 33 and 66 she will swap 'b' with 'y', 'c' with 'z' and 'f' with 'm'. The resulting strings will be "ayzdem" and "xbcklf".Cirno then stole away the string without pair and shuffled all remaining strings in arbitrary order.AquaMoon found the remaining n−1n−1 strings in complete disarray. Also, she remembers the initial nn strings. She wants to know which string was stolen, but she is not good at programming. Can you help her?
InputThis problem is made as interactive. It means, that your solution will read the input, given by the interactor. But the interactor will give you the full input at the beginning and after that, you should print the answer. So you should solve the problem, like as you solve the usual, non-interactive problem because you won't have any interaction process. The only thing you should not forget is to flush the output buffer, after printing the answer. Otherwise, you can get an "Idleness limit exceeded" verdict. Refer to the interactive problems guide for the detailed information about flushing the output buffer.The input consists of multiple test cases. The first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases.The first line of each test case contains two integers nn, mm (1≤n≤1051≤n≤105, 1≤m≤1051≤m≤105) — the number of strings and the length of each string, respectively.The next nn lines each contain a string with length mm, describing the original nn strings. All string consists of lowercase Latin letters.The next n−1n−1 lines each contain a string with length mm, describing the strings after Cirno exchanged and reordered them.It is guaranteed that nn is odd and that the sum of n⋅mn⋅m over all test cases does not exceed 105105.Hack format:The first line should contain a single integer tt. After that tt test cases should follow in the following format:The first line should contain two integers nn and mm.The following nn lines should contain nn strings of length mm, describing the original strings.The following n−12n−12 lines should describe the pairs. They should contain, in the following order: the index of the first string ii (1≤i≤n1≤i≤n), the index of the second string jj (1≤j≤n1≤j≤n, i≠ji≠j), the number of exchanged positions kk (1≤k≤m1≤k≤m), and the list of kk positions that are exchanged (kk distinct indices from 11 to mm in any order).The final line should contain a permutation of integers from 11 to nn, describing the way the strings should be reordered. The strings will be placed in the order indices placed in this permutation, the stolen string index will be ignored.
OutputFor each test case print a single line with the stolen string.
ExampleInputCopy3
3 5
aaaaa
bbbbb
ccccc
aaaaa
bbbbb
3 4
aaaa
bbbb
cccc
aabb
bbaa
5 6
abcdef
uuuuuu
kekeke
ekekek
xyzklm
xbcklf
eueueu
ayzdem
ukukuk
OutputCopyccccc
cccc
kekeke

NoteIn the first test case, "aaaaa" and "bbbbb" exchanged all positions, and "ccccc" is the stolen string.In the second test case, "aaaa" and "bbbb" exchanged two first positions, and "cccc" is the stolen string.This is the first test in the hack format: 33 5aaaaabbbbbccccc1 2 5 1 2 3 4 52 1 33 4aaaabbbbcccc1 2 2 1 22 1 35 6abcdefuuuuuukekekeekekekxyzklm1 5 3 2 3 62 4 3 2 4 65 4 1 2 3