Mihai lives in a town where meteor storms are a common problem. It's annoying, because Mihai has to buy groceries sometimes, and getting hit by meteors isn't fun. Therefore, we ask you to find the most dangerous way to buy groceries so that we can trick him to go there.The town has nn buildings numbered from 11 to nn. Some buildings have roads between them, and there is exactly 11 simple path from any building to any other building. Each road has a certain meteor danger level. The buildings all have grocery stores, but Mihai only cares about the open ones, of course. Initially, all the grocery stores are closed.You are given qq queries of three types:  Given the integers ll and rr, the buildings numbered from ll to rr open their grocery stores (nothing happens to buildings in the range that already have an open grocery store). Given the integers ll and rr, the buildings numbered from ll to rr close their grocery stores (nothing happens to buildings in the range that didn't have an open grocery store). Given the integer xx, find the maximum meteor danger level on the simple path from xx to any open grocery store, or −1−1 if there is no edge on any simple path to an open store. 
InputThe first line contains the two integers nn and qq (2≤n,q≤3⋅1052≤n,q≤3⋅105).Then follows n−1n−1 lines, the ii-th of which containing the integers uiui, vivi, and wiwi (1≤ui,vi≤n,1≤wi≤1091≤ui,vi≤n,1≤wi≤109) meaning there is two way road between building uiui and vivi with meteor danger level wiwi.It is guaranteed that the given edges form a tree.Then follows qq lines, the jj-th of which begin with the integer tjtj (1≤tj≤31≤tj≤3), meaning the jj-th query is of the tjtj-th type.If tjtj is 11 or 22 the rest of the line contains the integers ljlj and rjrj (1≤lj≤rj≤n1≤lj≤rj≤n).If tjtj is 33 the rest of the line contains the integer xjxj (1≤xj≤n1≤xj≤n).
OutputFor each query of the 33rd type (tj=3tj=3), output the maximum meteor danger level that is on some edge on the simple path from xjxj to some open store, or −1−1 if there is no such edge.
ExampleInputCopy6 9
1 3 1
2 3 2
4 5 3
4 6 4
3 4 5
3 1
1 1 1
3 1
2 1 1
1 5 6
3 4
2 6 6
3 4
3 1
OutputCopy-1
-1
4
3
5

NoteThis is an illustration of the town given in the sample input.In the first query, there are no open stores, so obviously there are no edges on the simple path from 11 to any open store, so the answer is −1−1.After the second and third queries, the set of open stores is {1}{1}. The simple path from 11 to 11 has no edges, so the answer for the 33rd query is −1−1.After the fourth query, there are no open stores.After the fifth and sixth queries, the set of open stores is {5,6}{5,6}. In the sixth query, there are two paths from xj=4xj=4 to some open grocery store: 44 to 55 and 44 to 66. The biggest meteor danger is found on the edge from 44 to 66, so the answer for the 66th query is 44. This path is marked with red in the illustration.After the rest of the queries, the set of open stores is {5}{5}. In the eighth query, the only path from xj=4xj=4 to an open store is from 44 to 55, and the maximum weight on that path is 33. This path is marked with green in the illustration.In the ninth query, the only path from xj=1xj=1 to an open store is from 11 to 55, and the maximum weight on that path is 55. This path is marked with blue in the illustration.