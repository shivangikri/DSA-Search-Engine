You are given an array aa consisting of nn integers. You should divide aa into continuous non-empty subarrays (there are 2n−12n−1 ways to do that).Let s=al+al+1+…+ars=al+al+1+…+ar. The value of a subarray al,al+1,…,aral,al+1,…,ar is:   (r−l+1)(r−l+1) if s>0s>0, 00 if s=0s=0, −(r−l+1)−(r−l+1) if s<0s<0.  What is the maximum sum of values you can get with a partition?
InputThe input consists of multiple test cases. The first line contains a single integer tt (1≤t≤5⋅1051≤t≤5⋅105) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (1≤n≤5⋅1051≤n≤5⋅105).The second line of each test case contains nn integers a1a1, a2a2, ..., anan (−109≤ai≤109−109≤ai≤109).It is guaranteed that the sum of nn over all test cases does not exceed 5⋅1055⋅105.
OutputFor each test case print a single integer — the maximum sum of values you can get with an optimal parition.
ExampleInputCopy5
3
1 2 -3
4
0 -2 3 -4
5
-1 -2 3 -1 -1
6
-1 2 -3 4 -5 6
7
1 -1 -1 1 -1 -1 1
OutputCopy1
2
1
6
-1

NoteTest case 11: one optimal partition is [1,2][1,2], [−3][−3]. 1+2>01+2>0 so the value of [1,2][1,2] is 22. −3<0−3<0, so the value of [−3][−3] is −1−1. 2+(−1)=12+(−1)=1.Test case 22: the optimal partition is [0,−2,3][0,−2,3], [−4][−4], and the sum of values is 3+(−1)=23+(−1)=2.