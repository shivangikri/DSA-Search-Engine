oolimry has an array aa of length nn which he really likes. Today, you have changed his array to bb, a permutation of aa, to make him sad.Because oolimry is only a duck, he can only perform the following operation to restore his array:   Choose two integers i,ji,j such that 1≤i,j≤n1≤i,j≤n.  Swap bibi and bjbj. The sadness of the array bb is the minimum number of operations needed to transform bb into aa.Given the array aa, find any array bb which is a permutation of aa that has the maximum sadness over all permutations of the array aa.
InputEach test contains multiple test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104)  — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105)  — the length of the array.The second line of each test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤n1≤ai≤n)  — elements of the array aa.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputFor each test case, print nn integers b1,b2,…,bnb1,b2,…,bn — describing the array bb. If there are multiple answers, you may print any.
ExampleInputCopy2
2
2 1
4
1 2 3 3
OutputCopy1 2
3 3 2 1

NoteIn the first test case, the array [1,2][1,2] has sadness 11. We can transform [1,2][1,2] into [2,1][2,1] using one operation with (i,j)=(1,2)(i,j)=(1,2).In the second test case, the array [3,3,2,1][3,3,2,1] has sadness 22. We can transform [3,3,2,1][3,3,2,1] into [1,2,3,3][1,2,3,3] with two operations with (i,j)=(1,4)(i,j)=(1,4) and (i,j)=(2,3)(i,j)=(2,3) respectively.