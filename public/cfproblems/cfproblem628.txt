There is an infinite pond that can be represented with a number line. There are nn rocks in the pond, numbered from 11 to nn. The ii-th rock is located at an integer coordinate aiai. The coordinates of the rocks are pairwise distinct. The rocks are numbered in the increasing order of the coordinate, so a1<a2<⋯<ana1<a2<⋯<an.A robot frog sits on the rock number ss. The frog is programmable. It has a base jumping distance parameter dd. There also is a setting for the jumping distance range. If the jumping distance range is set to some integer kk, then the frog can jump from some rock to any rock at a distance from d−kd−k to d+kd+k inclusive in any direction. The distance between two rocks is an absolute difference between their coordinates.You are assigned a task to implement a feature for the frog. Given two integers ii and kk determine if the frog can reach a rock number ii from a rock number ss performing a sequence of jumps with the jumping distance range set to kk. The sequence can be arbitrarily long or empty.You will be given qq testcases for that feature, the jj-th testcase consists of two integers ii and kk. Print "Yes" if the ii-th rock is reachable and "No" otherwise.You can output "YES" and "NO" in any case (for example, strings "yEs", "yes", "Yes" and 'YES"' will be recognized as a positive answer).
InputThe first line contains four integers nn, qq, ss and dd (1≤n,q≤2⋅1051≤n,q≤2⋅105; 1≤s≤n1≤s≤n; 1≤d≤1061≤d≤106) — the number of rocks, the number of testcases, the starting rock and the base jumping distance parameter.The second line contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1061≤ai≤106) — the coordinates of the rocks. The coordinates of the rocks are pairwise distinct. The rocks are numbered in the increasing order of distance from the land, so a1<a2<⋯<ana1<a2<⋯<an.Each of the next qq lines contains two integers ii and kk (1≤i≤n1≤i≤n; 1≤k≤1061≤k≤106) — the parameters to the testcase.
OutputFor each of the testcases print an answer. If there is a sequence of jumps from a rock number ss to a rock number ii with the jumping distance range set to kk, then print "Yes". Otherwise, print "No".
ExamplesInputCopy7 4 4 5
1 5 10 13 20 22 28
4 1
7 2
7 3
3 2
OutputCopyYes
No
Yes
Yes
InputCopy10 8 6 11
1 2 4 7 8 9 11 13 19 20
2 13
5 8
8 1
6 15
1 15
2 7
7 6
8 9
OutputCopyYes
Yes
No
Yes
Yes
Yes
Yes
Yes
InputCopy6 9 6 6
1 2 4 9 18 19
2 17
1 18
5 4
2 11
5 17
6 8
4 3
3 3
6 6
OutputCopyYes
Yes
Yes
Yes
Yes
Yes
No
No
Yes
InputCopy4 1 1 10
1 8 10 19
2 1
OutputCopyYes

NoteExplanation of the first example:In the first testcase the destination rock is the same as the starting rock, thus no jumps are required to reach it.In the second testcase the frog can jump any distance in the range [5−2;5+2][5−2;5+2]. Thus, it can reach rock number 55 (by jumping 77 to the right) and rock number 33 (by jumping 33 to the left). From rock number 33 it can reach rock number 22 (by jumping 55 to the left). From rock number 22 it can reach rock number 11 (by jumping 44 to the left). However, there is no way to reach rock number 77.In the third testcase the frog can jump any distance in the range [5−3;5+3][5−3;5+3]. Thus, it can reach rock number 77 by jumping to rock 55 first and to 77 afterwards.The fourth testcase is shown in the explanation for the second testcase.