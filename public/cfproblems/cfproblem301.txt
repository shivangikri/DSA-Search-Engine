You are given a decimal representation of an integer xx without leading zeros.You have to perform the following reduction on it exactly once: take two neighboring digits in xx and replace them with their sum without leading zeros (if the sum is 00, it's represented as a single 00).For example, if x=10057x=10057, the possible reductions are:   choose the first and the second digits 11 and 00, replace them with 1+0=11+0=1; the result is 10571057;  choose the second and the third digits 00 and 00, replace them with 0+0=00+0=0; the result is also 10571057;  choose the third and the fourth digits 00 and 55, replace them with 0+5=50+5=5; the result is still 10571057;  choose the fourth and the fifth digits 55 and 77, replace them with 5+7=125+7=12; the result is 1001210012. What's the largest number that can be obtained?
InputThe first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of testcases.Each testcase consists of a single integer xx (10≤x<1020000010≤x<10200000). xx doesn't contain leading zeros.The total length of the decimal representations of xx over all testcases doesn't exceed 2⋅1052⋅105.
OutputFor each testcase, print a single integer — the largest number that can be obtained after the reduction is applied exactly once. The number should not contain leading zeros.
ExampleInputCopy2
10057
90
OutputCopy10012
9

NoteThe first testcase of the example is already explained in the statement.In the second testcase, there is only one possible reduction: the first and the second digits.