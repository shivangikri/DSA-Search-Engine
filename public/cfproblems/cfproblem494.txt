In fact, the problems E1 and E2 do not have much in common. You should probably think of them as two separate problems.You are given an integer array a[1…n]=[a1,a2,…,an]a[1…n]=[a1,a2,…,an].Let us consider an empty deque (double-ended queue). A deque is a data structure that supports adding elements to both the beginning and the end. So, if there are elements [3,4,4][3,4,4] currently in the deque, adding an element 11 to the beginning will produce the sequence [1,3,4,4][1,3,4,4], and adding the same element to the end will produce [3,4,4,1][3,4,4,1].The elements of the array are sequentially added to the initially empty deque, starting with a1a1 and finishing with anan. Before adding each element to the deque, you may choose whether to add it to the beginning or to the end.For example, if we consider an array a=[3,7,5,5]a=[3,7,5,5], one of the possible sequences of actions looks like this:  1.add 33 to the beginning of the deque:deque has a sequence [3][3] in it; 2.add 77 to the end of the deque:deque has a sequence [3,7][3,7] in it; 3.add 55 to the end of the deque:deque has a sequence [3,7,5][3,7,5] in it; 4.add 55 to the beginning of the deque:deque has a sequence [5,3,7,5][5,3,7,5] in it;Find the minimal possible number of inversions in the deque after the whole array is processed. An inversion in sequence dd is a pair of indices (i,j)(i,j) such that i<ji<j and di>djdi>dj. For example, the array d=[5,3,7,5]d=[5,3,7,5] has exactly two inversions — (1,2)(1,2) and (3,4)(3,4), since d1=5>3=d2d1=5>3=d2 and d3=7>5=d4d3=7>5=d4.
InputThe first line contains an integer tt (1≤t≤10001≤t≤1000) — the number of test cases.The next 2t2t lines contain descriptions of the test cases. The first line of each test case description contains an integer nn (1≤n≤2⋅1051≤n≤2⋅105) — array size. The second line of the description contains nn space-separated integers aiai (−109≤ai≤109−109≤ai≤109) — elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 2⋅1052⋅105.
OutputPrint tt lines, each line containing the answer to the corresponding test case. The answer to a test case should be a single integer — the minimal possible number of inversions in the deque after executing the described algorithm.
ExampleInputCopy6
4
3 7 5 5
3
3 2 1
3
3 1 2
4
-1 2 2 -1
4
4 5 1 3
5
1 3 1 3 2
OutputCopy2
0
1
0
1
2

NoteOne of the ways to get the sequence [5,3,7,5][5,3,7,5] in the deque, containing only two inversions, from the initial array [3,7,5,5][3,7,5,5] (the first sample test case) is described in the problem statement. Also, in this example, you could get the answer of two inversions by simply putting each element of the original array at the end of the deque. In this case, the original sequence [3,7,5,5][3,7,5,5], also containing exactly two inversions, will be in the deque as-is.