Note that the differences between easy and hard versions are the constraints on nn and the time limit. You can make hacks only if both versions are solved.AquaMoon knew through foresight that some ghosts wanted to curse tourists on a pedestrian street. But unfortunately, this time, these ghosts were hiding in a barrier, and she couldn't enter this barrier in a short time and destroy them. Therefore, all that can be done is to save any unfortunate person on the street from the ghosts.The pedestrian street can be represented as a one-dimensional coordinate system. There is one person hanging out on the pedestrian street. At the time 00 he is at coordinate xx, moving with a speed of 11 unit per second. In particular, at time ii the person will be at coordinate x+ix+i.The ghosts are going to cast nn curses on the street. The ii-th curse will last from time tli−1+10−18tli−1+10−18 to time tri+1−10−18tri+1−10−18 (exclusively) and will kill people with coordinates from li−1+10−18li−1+10−18 to ri+1−10−18ri+1−10−18 (exclusively). Formally that means, that the person, whose coordinate is between (li−1+10−18,ri+1−10−18)(li−1+10−18,ri+1−10−18) in the time range (tli−1+10−18,tri+1−10−18)(tli−1+10−18,tri+1−10−18) will die.To save the person on the street, AquaMoon can stop time at any moment tt, and then move the person from his current coordinate xx to any coordinate yy (tt, xx and yy are not necessarily integers). The movement costs AquaMoon |x−y||x−y| energy. The movement is continuous, so if there exists some cursed area between points xx and yy at time tt, the person will die too.AquaMoon wants to know what is the minimum amount of energy she needs to spend in order to save the person on the street from all nn curses. But she is not good at programming. As her friend, can you help her?
InputThe first line contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of curses.The next line contains a single integer xx (1≤x≤1061≤x≤106) — the initial coordinate of the person.The following nn lines contain four integers tlitli, tritri, lili, riri each (1≤tli≤tri≤1061≤tli≤tri≤106, 1≤li≤ri≤1061≤li≤ri≤106).
OutputPrint a single integer — the minimum energy which AquaMoon needs to spent, rounded up to the nearest integer (in case there are two nearest integers you should round the answer to the highest of them).
ExamplesInputCopy2
1
1 2 1 2
2 3 2 3
OutputCopy2InputCopy3
4
1 4 1 2
1 4 4 15
6 7 1 4
OutputCopy8InputCopy4
3
1 5 1 1
4 10 1 4
1 2 3 13
1 10 7 19
OutputCopy14InputCopy7
5
78 96 76 91
6 16 18 37
53 63 40 56
83 88 21 38
72 75 17 24
63 63 53 60
34 46 60 60
OutputCopy20