It turns out that the meaning of life is a permutation p1,p2,…,pnp1,p2,…,pn of the integers 1,2,…,n1,2,…,n (2≤n≤1002≤n≤100). Omkar, having created all life, knows this permutation, and will allow you to figure it out using some queries.A query consists of an array a1,a2,…,ana1,a2,…,an of integers between 11 and nn. aa is not required to be a permutation. Omkar will first compute the pairwise sum of aa and pp, meaning that he will compute an array ss where sj=pj+ajsj=pj+aj for all j=1,2,…,nj=1,2,…,n. Then, he will find the smallest index kk such that sksk occurs more than once in ss, and answer with kk. If there is no such index kk, then he will answer with 00.You can perform at most 2n2n queries. Figure out the meaning of life pp.
InteractionStart the interaction by reading single integer nn (2≤n≤1002≤n≤100)  — the length of the permutation pp.You can then make queries. A query consists of a single line "?a1a2…an?a1a2…an" (1≤aj≤n1≤aj≤n).The answer to each query will be a single integer kk as described above (0≤k≤n0≤k≤n).After making a query do not forget to output end of line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use: fflush(stdout) or cout.flush() in C++; System.out.flush() in Java; flush(output) in Pascal; stdout.flush() in Python; see documentation for other languages.To output your answer, print a single line "!p1p2…pn!p1p2…pn" then terminate.You can make at most 2n2n queries. Outputting the answer does not count as a query.Hack FormatTo hack, first output a line containing nn (2≤n≤1002≤n≤100), then output another line containing the hidden permutation p1,p2,…,pnp1,p2,…,pn of numbers from 11 to nn.
ExampleInputCopy5

2

0

1
OutputCopy
? 4 4 2 3 2

? 3 5 1 5 5

? 5 2 4 3 1

! 3 2 1 5 4

NoteIn the sample, the hidden permutation pp is [3,2,1,5,4][3,2,1,5,4]. Three queries were made.The first query is a=[4,4,2,3,2]a=[4,4,2,3,2]. This yields s=[3+4,2+4,1+2,5+3,4+2]=[7,6,3,8,6]s=[3+4,2+4,1+2,5+3,4+2]=[7,6,3,8,6]. 66 is the only number that appears more than once, and it appears first at index 22, making the answer to the query 22.The second query is a=[3,5,1,5,5]a=[3,5,1,5,5]. This yields s=[3+3,2+5,1+1,5+5,4+5]=[6,7,2,10,9]s=[3+3,2+5,1+1,5+5,4+5]=[6,7,2,10,9]. There are no numbers that appear more than once here, so the answer to the query is 00.The third query is a=[5,2,4,3,1]a=[5,2,4,3,1]. This yields s=[3+5,2+2,1+4,5+3,4+1]=[8,4,5,8,5]s=[3+5,2+2,1+4,5+3,4+1]=[8,4,5,8,5]. 55 and 88 both occur more than once here. 55 first appears at index 33, while 88 first appears at index 11, and 1<31<3, making the answer to the query 11.Note that the sample is only meant to provide an example of how the interaction works; it is not guaranteed that the above queries represent a correct strategy with which to determine the answer.