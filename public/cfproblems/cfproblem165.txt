You are given an undirected unrooted tree, i.e. a connected undirected graph without cycles.You must assign a nonzero integer weight to each vertex so that the following is satisfied: if any vertex of the tree is removed, then each of the remaining connected components has the same sum of weights in its vertices.
InputThe input consists of multiple test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. Description of the test cases follows.The first line of each test case contains an integer nn (3≤n≤1053≤n≤105) — the number of vertices of the tree.The next n−1n−1 lines of each case contain each two integers u,vu,v (1≤u,v≤n1≤u,v≤n) denoting that there is an edge between vertices uu and vv. It is guaranteed that the given edges form a tree.The sum of nn for all test cases is at most 105105.
OutputFor each test case, you must output one line with nn space separated integers a1,a2,…,ana1,a2,…,an, where aiai is the weight assigned to vertex ii. The weights must satisfy −105≤ai≤105−105≤ai≤105 and ai≠0ai≠0.It can be shown that there always exists a solution satisfying these constraints. If there are multiple possible solutions, output any of them.
ExampleInputCopy2
5
1 2
1 3
3 4
3 5
3
1 2
1 3
OutputCopy-3 5 1 2 2
1 1 1

NoteIn the first case, when removing vertex 11 all remaining connected components have sum 55 and when removing vertex 33 all remaining connected components have sum 22. When removing other vertices, there is only one remaining connected component so all remaining connected components have the same sum.