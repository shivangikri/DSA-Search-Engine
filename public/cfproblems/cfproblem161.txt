Given an undirected graph GG, we say that a neighbour ordering is an ordered list of all the neighbours of a vertex for each of the vertices of GG. Consider a given neighbour ordering of GG and three vertices uu, vv and ww, such that vv is a neighbor of uu and ww. We write u<vwu<vw if uu comes after ww in vv's neighbor list.A neighbour ordering is said to be good if, for each simple cycle v1,v2,…,vcv1,v2,…,vc of the graph, one of the following is satisfied:  v1<v2v3,v2<v3v4,…,vc−2<vc−1vc,vc−1<vcv1,vc<v1v2v1<v2v3,v2<v3v4,…,vc−2<vc−1vc,vc−1<vcv1,vc<v1v2. v1>v2v3,v2>v3v4,…,vc−2>vc−1vc,vc−1>vcv1,vc>v1v2v1>v2v3,v2>v3v4,…,vc−2>vc−1vc,vc−1>vcv1,vc>v1v2. Given a graph GG, determine whether there exists a good neighbour ordering for it and construct one if it does.
InputThe input consists of multiple test cases. The first line contains a single integer tt (1≤t≤1041≤t≤104) — the number of test cases. Description of the test cases follows.The first line of each test case contains two integers nn and mm (2≤n≤3⋅1052≤n≤3⋅105, 1≤m≤3⋅1051≤m≤3⋅105), the number of vertices and the number of edges of the graph.The next mm lines each contain two integers u,vu,v (0≤u,v<n0≤u,v<n), denoting that there is an edge connecting vertices uu and vv. It is guaranteed that the graph is connected and there are no loops or multiple edges between the same vertices.The sum of nn and the sum of mm for all test cases are at most 3⋅1053⋅105.
OutputFor each test case, output one line with YES if there is a good neighbour ordering, otherwise output one line with NO. You can print each letter in any case (upper or lower).If the answer is YES, additionally output nn lines describing a good neighbour ordering. In the ii-th line, output the neighbours of vertex ii in order. If there are multiple good neigbour orderings, print any.
ExampleInputCopy3
5 6
0 1
0 2
1 2
2 3
3 4
4 1
2 1
0 1
6 10
0 1
2 0
0 3
0 4
1 2
1 4
2 3
2 5
3 5
4 5
OutputCopyYES
1 2 
4 2 0 
0 1 3 
2 4 
3 1 
YES
1 
0 
NO
