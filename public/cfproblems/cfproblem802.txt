Polycarp is an organizer of a Berland ICPC regional event. There are nn universities in Berland numbered from 11 to nn. Polycarp knows all competitive programmers in the region. There are nn students: the ii-th student is enrolled at a university uiui and has a programming skill sisi.Polycarp has to decide on the rules now. In particular, the number of members in the team.Polycarp knows that if he chooses the size of the team to be some integer kk, each university will send their kk strongest (with the highest programming skill ss) students in the first team, the next kk strongest students in the second team and so on. If there are fewer than kk students left, then the team can't be formed. Note that there might be universities that send zero teams.The strength of the region is the total skill of the members of all present teams. If there are no teams present, then the strength is 00.Help Polycarp to find the strength of the region for each choice of kk from 11 to nn.
InputThe first line contains a single integer tt (1≤t≤10001≤t≤1000) — the number of testcases.The first line of each testcase contains a single integer nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of universities and the number of students.The second line of each testcase contains nn integers u1,u2,…,unu1,u2,…,un (1≤ui≤n1≤ui≤n) — the university the ii-th student is enrolled at.The third line of each testcase contains nn integers s1,s2,…,sns1,s2,…,sn (1≤si≤1091≤si≤109) — the programming skill of the ii-th student.The sum of nn over all testcases doesn't exceed 2⋅1052⋅105.
OutputFor each testcase print nn integers: the strength of the region — the total skill of the members of the present teams — for each choice of team size kk.
ExampleInputCopy4
7
1 2 1 2 1 2 1
6 8 3 1 5 1 5
10
1 1 1 2 2 2 2 3 3 3
3435 3014 2241 2233 2893 2102 2286 2175 1961 2567
6
3 3 3 3 3 3
5 9 6 7 9 7
1
1
3083
OutputCopy29 28 26 19 0 0 0 
24907 20705 22805 9514 0 0 0 0 0 0 
43 43 43 32 38 43 
3083 

NoteIn the first testcase the teams from each university for each kk are:   k=1k=1:   university 11: [6],[5],[5],[3][6],[5],[5],[3];  university 22: [8],[1],[1][8],[1],[1];   k=2k=2:   university 11: [6,5],[5,3][6,5],[5,3];  university 22: [8,1][8,1];   k=3k=3:   university 11: [6,5,5][6,5,5];  university 22: [8,1,1][8,1,1];   k=4k=4:   university 11: [6,5,5,3][6,5,5,3];  